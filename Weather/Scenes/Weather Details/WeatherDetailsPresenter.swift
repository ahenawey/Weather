//
//  WeatherDetailsPresenter.swift
//  Weather
//
//  Created by Ahmed Ali Henawey on 21/04/2018.
//  Copyright (c) 2018 Ahmed Ali Henawey. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol WeatherDetailsPresentationLogic
{
    func presentWeatherDetails(response: WeatherDetails.Response)
    func presentError(error: Error)
}

class WeatherDetailsPresenter: WeatherDetailsPresentationLogic
{
    weak var viewController: WeatherDetailsDisplayLogic?
    
    // MARK: Do something
    
    func presentWeatherDetails(response: WeatherDetails.Response)
    {
        // formatting info
        // https://openweathermap.org/weather-data
        let isMetricSystem = Locale.current.usesMetricSystem
        
        let temperatureUnit = isMetricSystem ? "°C" : "°F"
        let temperature: String = "\(Int(response.forecast.temperature)) \(temperatureUnit)"
        let humidity: String = "\(Int(response.forecast.humidity)) %"
        
        var precipitation: String = "---"
        let precipitationUnit = isMetricSystem ? "mm" : "mm"
        if let _precipitation = response.forecast.precipitation {
            precipitation = "\(_precipitation) \(precipitationUnit)"
        }
        
        let windSpeedUnit = isMetricSystem ? "meter/sec" : "miles/hour"
        let windSpeed: String = "\(response.forecast.wind.speed) \(windSpeedUnit)"
        
        let windDegreesUnit = isMetricSystem ? "degrees" : "degrees"
        let windDegrees: String = "\(response.forecast.wind.speed) \(windDegreesUnit)"
        
        let viewModel = WeatherDetails.ViewModel(cityName: response.cityName,temperature: temperature, humidity: humidity, precipitation: precipitation, windSpeed: windSpeed, windDegrees: windDegrees)
        viewController?.displayWeatherDetails(viewModel: viewModel)
    }
    
    func presentError(error: Error){
         viewController?.displayError(title: NSLocalizedString("Error", comment: "Error"), message: error.localizedDescription)
    }
}
